{"sample_id": "a5ae1249-7f33-4d40-8ad1-914a0623e3bd", "input": "The population of a town is 10000. It decreases annually at the rate of 20% p.a. What will be its population after 2 years?", "output": [{"name": "divide", "label": "$var_1", "arguments": {"arg_0": 20, "arg_1": 100}}, {"name": "multiply", "label": "$var_2", "arguments": {"arg_0": 10000, "arg_1": "$var_1.result$"}}, {"name": "subtract", "label": "$var_3", "arguments": {"arg_0": 10000, "arg_1": "$var_2.result$"}}, {"name": "divide", "label": "$var_4", "arguments": {"arg_0": 20, "arg_1": 100}}, {"name": "multiply", "label": "$var_5", "arguments": {"arg_0": 10000, "arg_1": "$var_4.result$"}}, {"name": "subtract", "label": "$var_6", "arguments": {"arg_0": 10000, "arg_1": "$var_5.result$"}}, {"name": "divide", "label": "$var_7", "arguments": {"arg_0": 20, "arg_1": 100}}, {"name": "multiply", "label": "$var_8", "arguments": {"arg_0": "$var_6.result$", "arg_1": "$var_7.result$"}}, {"name": "subtract", "label": "$var_9", "arguments": {"arg_0": "$var_3.result$", "arg_1": "$var_8.result$"}}], "tools": [{"name": "add", "description": "adds two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The addition result", "type": "int or float"}}}, {"name": "inverse", "description": "Return the inverse (reciprocal) of a number", "parameters": {"arg_0": {"description": "The number to inverse", "type": "int or float"}}, "output_parameter": {"result": {"description": "The inverse result", "type": "int or float"}}}, {"name": "negate", "description": "Return the negation of a number", "parameters": {"arg_0": {"description": "The number to inverse", "type": "int or float"}}, "output_parameter": {"result": {"description": "The inverse result", "type": "int or float"}}}, {"name": "divide", "description": "divides two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The division result", "type": "int or float"}}}, {"name": "volume_cone", "description": "Calculate the volume of a cone", "parameters": {"arg_0": {"description": "Radius of the base of the cone", "type": "float"}, "arg_1": {"description": "Height of the cone", "type": "float"}}, "output_parameter": {"result": {"description": "Volume of the cone", "type": "float"}}}, {"name": "multiply", "description": "Multiplies two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The multiplication result", "type": "int or float"}}}, {"name": "subtract", "description": "subtract two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The subtraction result", "type": "int or float"}}}, {"name": "triangle_area", "description": "Calculate the area of a triangle given base and height", "parameters": {"arg_0": {"description": "Length of the base of the triangle", "type": "float"}, "arg_1": {"description": "Height of the triangle", "type": "float"}}, "output_parameter": {"result": {"description": "Area of the triangle", "type": "float"}}}, {"name": "diagonal", "description": "Calculate the length of the diagonal of a rectangle", "parameters": {"arg_0": {"description": "Length of the rectangle", "type": "float"}, "arg_1": {"description": "Width of the rectangle", "type": "float"}}, "output_parameter": {"result": {"description": "Length of the diagonal", "type": "float"}}}], "gold_answer": 6400.0}
{"sample_id": "fa57c28a-e9d8-44fb-a358-a9404a557d5b", "input": "Get the text content of the URL 'https://www.example.com', then count the occurrence of the word 'the' in the text content.", "output": [{"name": "get_url_content", "arguments": {"url": "https://www.example.com"}, "label": "$var1"}, {"name": "count_the_word", "arguments": {"string": "$var1.output_0$"}, "label": "$var2"}], "tools": [{"description": "Counts the occurrence of the word \"the\" in a given string.", "name": "count_the_word", "output_parameters": {"properties": {"output_0": {"description": "A list of integers. The first integer is the index of the word \"the\" in the string.\n    The second integer is the number of times the word \"the\" occurs. The third integer\n    is the number of times the word \"the\" repeats itself in the string.", "type": "array"}}}, "parameters": {"properties": {"string": {"description": "The input string.", "type": "string"}}, "required": ["string"], "type": "object"}}, {"description": "Counts the words in a list of sentences.", "name": "count_words_from_sentences", "output_parameters": {"properties": {"output_0": {"description": "A dictionary of words and their corresponding counts.", "type": "object"}}}, "parameters": {"properties": {"sentences": {"description": "A list of sentences.", "items": {"type": "string"}, "type": "array"}}, "required": ["sentences"], "type": "object"}}, {"description": "Calculates the maximum score from a JSON file representing a game's scores.", "name": "get_maximum_score", "output_parameters": {"properties": {"output_0": {"description": "", "type": "number"}}}, "parameters": {"properties": {"json_file_path": {"description": "The path to the JSON file.", "type": "string"}}, "required": ["json_file_path"], "type": "object"}}, {"description": "Rearranges a date string into the format \"yyyy/mm/dd\".", "name": "rearrange_date_string", "output_parameters": {"properties": {"output_0": {"description": "A string representing the date in the format \"yyyy/mm/dd\", or None if the input string is not a valid date.", "type": "string"}}}, "parameters": {"properties": {"date_string": {"description": "A string representing a date in the format \"yyyy/mm/dd\".", "type": "string"}}, "required": ["date_string"], "type": "object"}}, {"description": "Traverses a square matrix and returns the diagonal elements, ordered from the top-left to the bottom-right.", "name": "traverse_diagonal", "output_parameters": {"properties": {"output_0": {"description": "A list of the diagonal elements.", "type": "array"}}}, "parameters": {"properties": {"matrix": {"description": "A square matrix represented as a list of lists.", "items": {"items": {"type": "integer"}, "type": "array"}, "type": "array"}}, "required": ["matrix"], "type": "object"}}, {"description": "Returns a list of non-empty substrings that do not contain any whitespace characters.", "name": "non_whitespace_substrings", "output_parameters": {"properties": {"output_0": {"description": "", "type": "array"}}}, "parameters": {"properties": {"input_str": {"description": "A string containing multiple words separated by whitespace characters.", "type": "string"}}, "required": ["input_str"], "type": "object"}}, {"description": "Computes the degree of a polynomial expressed as a list of coefficients in decreasing order of powers.\nThe function handles a leading zero case where the degree of the polynomial is 0 (i.e., the list only contains a single zero).", "name": "compute_degree", "output_parameters": {"properties": {"output_0": {"description": "", "type": "integer"}}}, "parameters": {"properties": {"coefficients": {"description": "The coefficients of the polynomial in decreasing order of powers.", "items": {"type": "number"}, "type": "array"}}, "required": ["coefficients"], "type": "object"}}, {"description": "Generates a dictionary with `length` number of keys and their corresponding values.\nThe values for each key are a concatenation of the key and its numeric value.", "name": "generate_iterative_dictionary", "output_parameters": {"properties": {"output_0": {"description": "A dictionary with the generated keys and their corresponding values.", "type": "object"}}}, "parameters": {"properties": {"length": {"description": "The number of keys to generate in the dictionary.", "type": "integer"}}, "required": ["length"], "type": "object"}}, {"description": "Parses a string representing a list of numbers (separated by commas) into a list of floats.", "name": "parse_list_of_numbers", "output_parameters": {"properties": {"output_0": {"description": "A list of floats.", "type": "array"}}}, "parameters": {"properties": {"string": {"description": "The input string.", "type": "string"}}, "required": ["string"], "type": "object"}}, {"description": "Extracts the license type from a given license text string using regular expressions.", "name": "extract_license_type", "output_parameters": {"properties": {"output_0": {"description": "A string containing the license type (for example, \"GPLv3\") if found,\n    otherwise an empty string.", "type": "string"}}}, "parameters": {"properties": {"license_text": {"description": "The license text string to parse.", "type": "string"}}, "required": ["license_text"], "type": "object"}}, {"description": "Calculates the saliency ratio for a given time series.", "name": "ratio_saliency", "output_parameters": {"properties": {"output_0": {"description": "A list of floats representing the saliency ratios.", "type": "array"}}}, "parameters": {"properties": {"time_series": {"description": "A list of integers representing the time series.", "items": {"type": "integer"}, "type": "array"}}, "required": ["time_series"], "type": "object"}}, {"description": "Parses a string of a chemical formula and returns a tuple of the parsed charge and multiplicity.", "name": "parse_chemical_formula", "output_parameters": {"properties": {"output_0": {"description": "A tuple of the multiplicity and charge.", "type": "array"}}}, "parameters": {"properties": {"formula": {"description": "The string of the chemical formula following the format of `name(m, c)`, where `name` is the name of the chemical, `m` is the multiplicity, and `c` is the charge.", "type": "string"}}, "required": ["formula"], "type": "object"}}, {"description": "Finds the word with the highest frequency in a dictionary.\nIf two or more words have the same frequency, returns the word that comes first alphabetically.\nIf the frequency is zero, returns an empty string.", "name": "find_max_word_frequency", "output_parameters": {"properties": {"output_0": {"description": "", "type": "string"}}}, "parameters": {"properties": {"word_frequency_map": {"additionalProperties": {"type": "integer"}, "description": "A dictionary where keys are words and values are their frequencies.", "type": "object"}}, "required": ["word_frequency_map"], "type": "object"}}, {"description": "Generates a DRS URI for accessing an object on the DRS server.", "name": "generate_drs_uri", "output_parameters": {"properties": {"output_0": {"description": "", "type": "string"}}}, "parameters": {"properties": {"obj_id": {"description": "The object ID.", "nullable": true, "type": "string"}}, "required": ["obj_id"], "type": "object"}}, {"description": "Extracts unique words from a sentence and outputs them in a human-readable format.\n\nIf an empty string is passed to the function, it returns a string containing only the message \"No words found.\".", "name": "extract_unique_words", "output_parameters": {"properties": {"output_0": {"description": "A string containing the unique words from the input sentence, separated by commas and spaces.", "type": "string"}}}, "parameters": {"properties": {"sentence": {"description": "The input sentence.", "type": "string"}}, "required": ["sentence"], "type": "object"}}, {"description": "Merges two Python dictionaries recursively.", "name": "merge_two_dicts", "output_parameters": {"properties": {"output_0": {"description": "A new dictionary that contains the combined contents of `dict1` and `dict2`.", "type": "object"}}}, "parameters": {"properties": {"dict1": {"description": "The first dictionary to merge.", "type": "object"}, "dict2": {"description": "The second dictionary to merge.", "type": "object"}}, "required": ["dict1", "dict2"], "type": "object"}}, {"description": "Checks if two lists have the same elements without duplicates.", "name": "check_duplicates", "output_parameters": {"properties": {"output_0": {"description": "A boolean value indicating whether the two lists have the same elements without duplicates.", "type": "boolean"}}}, "parameters": {"properties": {"list_one": {"description": "The first list.", "items": {"type": "string"}, "type": "array"}, "list_two": {"description": "The second list.", "items": {"type": "string"}, "type": "array"}}, "required": ["list_one", "list_two"], "type": "object"}}, {"description": "Converts a distance from kilometers to miles.", "name": "kilometers_to_miles", "output_parameters": {"properties": {"output_0": {"description": "", "type": "number"}}}, "parameters": {"properties": {"kilometers": {"description": "The distance in kilometers.", "type": ["integer", "number"]}}, "required": ["kilometers"], "type": "object"}}, {"description": "Gets the text content of a URL's page.", "name": "get_url_content", "output_parameters": {"properties": {"output_0": {"description": "The text content of the URL's page.", "type": "string"}}}, "parameters": {"properties": {"url": {"description": "The URL to get the text content from.", "type": "string"}}, "required": ["url"], "type": "object"}}], "gold_answer": [-1, 0, 0]}
{"sample_id": "4c457bfb-c6e5-48ce-890d-b6ac4b2f307b", "input": "A certain list consists of 21 different numbers. If n is in the list and n is 4 times the average(arithmetic mean) of the other 20 numbers in the list, then n is what fraction Q of the sum of the 21 numbers in the list?", "output": [{"name": "multiply", "label": "$var_1", "arguments": {"arg_0": 1, "arg_1": 1}}, {"name": "divide", "label": "$var_2", "arguments": {"arg_0": 20, "arg_1": 4}}, {"name": "add", "label": "$var_3", "arguments": {"arg_0": "$var_2.result$", "arg_1": 21}}, {"name": "divide", "label": "$var_4", "arguments": {"arg_0": "$var_3.result$", "arg_1": 4}}, {"name": "multiply", "label": "$var_5", "arguments": {"arg_0": "$var_4.result$", "arg_1": 2}}, {"name": "subtract", "label": "$var_6", "arguments": {"arg_0": "$var_5.result$", "arg_1": 4}}, {"name": "subtract", "label": "$var_7", "arguments": {"arg_0": "$var_6.result$", "arg_1": 3}}, {"name": "divide", "label": "$var_8", "arguments": {"arg_0": "$var_1.result$", "arg_1": "$var_7.result$"}}], "tools": [{"name": "rectangle_perimeter", "description": "Calculate the perimeter of a rectangle", "parameters": {"arg_0": {"description": "rectangle length", "type": "int or float"}, "arg_1": {"description": "rectangle width", "type": "int or float"}}, "output_parameter": {"result": {"description": "the rectangle perimeter", "type": "int or float"}}}, {"name": "add", "description": "adds two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The addition result", "type": "int or float"}}}, {"name": "inverse", "description": "Return the inverse (reciprocal) of a number", "parameters": {"arg_0": {"description": "The number to inverse", "type": "int or float"}}, "output_parameter": {"result": {"description": "The inverse result", "type": "int or float"}}}, {"name": "sqrt", "description": "Calculate the square root of a non-negative number.", "parameters": {"arg_0": {"description": "The input number", "type": "int"}}, "output_parameter": {"result": {"description": "the square root of the provided number", "type": "int"}}}, {"name": "rhombus_area", "description": "Calculate the area of a rhombus", "parameters": {"arg_0": {"description": "Length of the first diagonal", "type": "float"}, "arg_1": {"description": "Length of the second diagonal", "type": "float"}}, "output_parameter": {"result": {"description": "Area of the rhombus", "type": "float"}}}, {"name": "negate_prob", "description": "Calculate the probability of an event not occurring", "parameters": {"arg_0": {"description": "Probability of the event occurring", "type": "float"}}, "output_parameter": {"result": {"description": "Probability of the event not occurring", "type": "float"}}}, {"name": "divide", "description": "divides two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The division result", "type": "int or float"}}}, {"name": "multiply", "description": "Multiplies two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The multiplication result", "type": "int or float"}}}, {"name": "square_perimeter", "description": "Calculate the perimeter of a square given its side length", "parameters": {"arg_0": {"description": "side length", "type": "int or float"}}, "output_parameter": {"result": {"description": "the square perimeter", "type": "int or float"}}}, {"name": "subtract", "description": "subtract two numbers", "parameters": {"arg_0": {"description": "The first number", "type": "int or float"}, "arg_1": {"description": "The second number", "type": "int or float"}}, "output_parameter": {"result": {"description": "The subtraction result", "type": "int or float"}}}], "gold_answer": 0.16666666666666666}